### YamlMime:XRefMap
sorted: true
references:
- uid: FileManager
  name: FileManager
  href: api/FileManager.html
  commentId: N:FileManager
  fullName: FileManager
  nameWithType: FileManager
- uid: FileManager.Context
  name: Context
  href: api/FileManager.Context.html
  commentId: T:FileManager.Context
  fullName: FileManager.Context
  nameWithType: Context
- uid: FileManager.Context.Args
  name: Args
  href: api/FileManager.Context.html#FileManager_Context_Args
  commentId: P:FileManager.Context.Args
  fullName: FileManager.Context.Args
  nameWithType: Context.Args
- uid: FileManager.Context.Args*
  name: Args
  href: api/FileManager.Context.html#FileManager_Context_Args_
  commentId: Overload:FileManager.Context.Args
  isSpec: "True"
  fullName: FileManager.Context.Args
  nameWithType: Context.Args
- uid: FileManager.Context.FileStorage
  name: FileStorage
  href: api/FileManager.Context.html#FileManager_Context_FileStorage
  commentId: P:FileManager.Context.FileStorage
  fullName: FileManager.Context.FileStorage
  nameWithType: Context.FileStorage
- uid: FileManager.Context.FileStorage*
  name: FileStorage
  href: api/FileManager.Context.html#FileManager_Context_FileStorage_
  commentId: Overload:FileManager.Context.FileStorage
  isSpec: "True"
  fullName: FileManager.Context.FileStorage
  nameWithType: Context.FileStorage
- uid: FileManager.CreateFileSetTrigger
  name: CreateFileSetTrigger
  href: api/FileManager.CreateFileSetTrigger.html
  commentId: T:FileManager.CreateFileSetTrigger
  fullName: FileManager.CreateFileSetTrigger
  nameWithType: CreateFileSetTrigger
- uid: FileManager.CreateFileSetTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Action_FileManager_Context_
  commentId: M:FileManager.CreateFileSetTrigger.Action(FileManager.Context)
  fullName: FileManager.CreateFileSetTrigger.Action(FileManager.Context)
  nameWithType: CreateFileSetTrigger.Action(Context)
- uid: FileManager.CreateFileSetTrigger.Action*
  name: Action
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Action_
  commentId: Overload:FileManager.CreateFileSetTrigger.Action
  isSpec: "True"
  fullName: FileManager.CreateFileSetTrigger.Action
  nameWithType: CreateFileSetTrigger.Action
- uid: FileManager.CreateFileSetTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.CreateFileSetTrigger.Condition(FileManager.Context)
  fullName: FileManager.CreateFileSetTrigger.Condition(FileManager.Context)
  nameWithType: CreateFileSetTrigger.Condition(Context)
- uid: FileManager.CreateFileSetTrigger.Condition*
  name: Condition
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Condition_
  commentId: Overload:FileManager.CreateFileSetTrigger.Condition
  isSpec: "True"
  fullName: FileManager.CreateFileSetTrigger.Condition
  nameWithType: CreateFileSetTrigger.Condition
- uid: FileManager.CreateTrigger
  name: CreateTrigger
  href: api/FileManager.CreateTrigger.html
  commentId: T:FileManager.CreateTrigger
  fullName: FileManager.CreateTrigger
  nameWithType: CreateTrigger
- uid: FileManager.CreateTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Action_FileManager_Context_
  commentId: M:FileManager.CreateTrigger.Action(FileManager.Context)
  fullName: FileManager.CreateTrigger.Action(FileManager.Context)
  nameWithType: CreateTrigger.Action(Context)
- uid: FileManager.CreateTrigger.Action*
  name: Action
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Action_
  commentId: Overload:FileManager.CreateTrigger.Action
  isSpec: "True"
  fullName: FileManager.CreateTrigger.Action
  nameWithType: CreateTrigger.Action
- uid: FileManager.CreateTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.CreateTrigger.Condition(FileManager.Context)
  fullName: FileManager.CreateTrigger.Condition(FileManager.Context)
  nameWithType: CreateTrigger.Condition(Context)
- uid: FileManager.CreateTrigger.Condition*
  name: Condition
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Condition_
  commentId: Overload:FileManager.CreateTrigger.Condition
  isSpec: "True"
  fullName: FileManager.CreateTrigger.Condition
  nameWithType: CreateTrigger.Condition
- uid: FileManager.DeleteTrigger
  name: DeleteTrigger
  href: api/FileManager.DeleteTrigger.html
  commentId: T:FileManager.DeleteTrigger
  fullName: FileManager.DeleteTrigger
  nameWithType: DeleteTrigger
- uid: FileManager.DeleteTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Action_FileManager_Context_
  commentId: M:FileManager.DeleteTrigger.Action(FileManager.Context)
  fullName: FileManager.DeleteTrigger.Action(FileManager.Context)
  nameWithType: DeleteTrigger.Action(Context)
- uid: FileManager.DeleteTrigger.Action*
  name: Action
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Action_
  commentId: Overload:FileManager.DeleteTrigger.Action
  isSpec: "True"
  fullName: FileManager.DeleteTrigger.Action
  nameWithType: DeleteTrigger.Action
- uid: FileManager.DeleteTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.DeleteTrigger.Condition(FileManager.Context)
  fullName: FileManager.DeleteTrigger.Condition(FileManager.Context)
  nameWithType: DeleteTrigger.Condition(Context)
- uid: FileManager.DeleteTrigger.Condition*
  name: Condition
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Condition_
  commentId: Overload:FileManager.DeleteTrigger.Condition
  isSpec: "True"
  fullName: FileManager.DeleteTrigger.Condition
  nameWithType: DeleteTrigger.Condition
- uid: FileManager.GetFilesByFileSetNameTrigger
  name: GetFilesByFileSetNameTrigger
  href: api/FileManager.GetFilesByFileSetNameTrigger.html
  commentId: T:FileManager.GetFilesByFileSetNameTrigger
  fullName: FileManager.GetFilesByFileSetNameTrigger
  nameWithType: GetFilesByFileSetNameTrigger
- uid: FileManager.GetFilesByFileSetNameTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Action_FileManager_Context_
  commentId: M:FileManager.GetFilesByFileSetNameTrigger.Action(FileManager.Context)
  fullName: FileManager.GetFilesByFileSetNameTrigger.Action(FileManager.Context)
  nameWithType: GetFilesByFileSetNameTrigger.Action(Context)
- uid: FileManager.GetFilesByFileSetNameTrigger.Action*
  name: Action
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Action_
  commentId: Overload:FileManager.GetFilesByFileSetNameTrigger.Action
  isSpec: "True"
  fullName: FileManager.GetFilesByFileSetNameTrigger.Action
  nameWithType: GetFilesByFileSetNameTrigger.Action
- uid: FileManager.GetFilesByFileSetNameTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.GetFilesByFileSetNameTrigger.Condition(FileManager.Context)
  fullName: FileManager.GetFilesByFileSetNameTrigger.Condition(FileManager.Context)
  nameWithType: GetFilesByFileSetNameTrigger.Condition(Context)
- uid: FileManager.GetFilesByFileSetNameTrigger.Condition*
  name: Condition
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Condition_
  commentId: Overload:FileManager.GetFilesByFileSetNameTrigger.Condition
  isSpec: "True"
  fullName: FileManager.GetFilesByFileSetNameTrigger.Condition
  nameWithType: GetFilesByFileSetNameTrigger.Condition
- uid: FileManager.HelpTrigger
  name: HelpTrigger
  href: api/FileManager.HelpTrigger.html
  commentId: T:FileManager.HelpTrigger
  fullName: FileManager.HelpTrigger
  nameWithType: HelpTrigger
- uid: FileManager.HelpTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Action_FileManager_Context_
  commentId: M:FileManager.HelpTrigger.Action(FileManager.Context)
  fullName: FileManager.HelpTrigger.Action(FileManager.Context)
  nameWithType: HelpTrigger.Action(Context)
- uid: FileManager.HelpTrigger.Action*
  name: Action
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Action_
  commentId: Overload:FileManager.HelpTrigger.Action
  isSpec: "True"
  fullName: FileManager.HelpTrigger.Action
  nameWithType: HelpTrigger.Action
- uid: FileManager.HelpTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.HelpTrigger.Condition(FileManager.Context)
  fullName: FileManager.HelpTrigger.Condition(FileManager.Context)
  nameWithType: HelpTrigger.Condition(Context)
- uid: FileManager.HelpTrigger.Condition*
  name: Condition
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Condition_
  commentId: Overload:FileManager.HelpTrigger.Condition
  isSpec: "True"
  fullName: FileManager.HelpTrigger.Condition
  nameWithType: HelpTrigger.Condition
- uid: FileManager.LinksPrinterTrigger
  name: LinksPrinterTrigger
  href: api/FileManager.LinksPrinterTrigger.html
  commentId: T:FileManager.LinksPrinterTrigger
  fullName: FileManager.LinksPrinterTrigger
  nameWithType: LinksPrinterTrigger
- uid: FileManager.LinksPrinterTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Action_FileManager_Context_
  commentId: M:FileManager.LinksPrinterTrigger.Action(FileManager.Context)
  fullName: FileManager.LinksPrinterTrigger.Action(FileManager.Context)
  nameWithType: LinksPrinterTrigger.Action(Context)
- uid: FileManager.LinksPrinterTrigger.Action*
  name: Action
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Action_
  commentId: Overload:FileManager.LinksPrinterTrigger.Action
  isSpec: "True"
  fullName: FileManager.LinksPrinterTrigger.Action
  nameWithType: LinksPrinterTrigger.Action
- uid: FileManager.LinksPrinterTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.LinksPrinterTrigger.Condition(FileManager.Context)
  fullName: FileManager.LinksPrinterTrigger.Condition(FileManager.Context)
  nameWithType: LinksPrinterTrigger.Condition(Context)
- uid: FileManager.LinksPrinterTrigger.Condition*
  name: Condition
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Condition_
  commentId: Overload:FileManager.LinksPrinterTrigger.Condition
  isSpec: "True"
  fullName: FileManager.LinksPrinterTrigger.Condition
  nameWithType: LinksPrinterTrigger.Condition
- uid: FileManager.ShowTrigger
  name: ShowTrigger
  href: api/FileManager.ShowTrigger.html
  commentId: T:FileManager.ShowTrigger
  fullName: FileManager.ShowTrigger
  nameWithType: ShowTrigger
- uid: FileManager.ShowTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Action_FileManager_Context_
  commentId: M:FileManager.ShowTrigger.Action(FileManager.Context)
  fullName: FileManager.ShowTrigger.Action(FileManager.Context)
  nameWithType: ShowTrigger.Action(Context)
- uid: FileManager.ShowTrigger.Action*
  name: Action
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Action_
  commentId: Overload:FileManager.ShowTrigger.Action
  isSpec: "True"
  fullName: FileManager.ShowTrigger.Action
  nameWithType: ShowTrigger.Action
- uid: FileManager.ShowTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.ShowTrigger.Condition(FileManager.Context)
  fullName: FileManager.ShowTrigger.Condition(FileManager.Context)
  nameWithType: ShowTrigger.Condition(Context)
- uid: FileManager.ShowTrigger.Condition*
  name: Condition
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Condition_
  commentId: Overload:FileManager.ShowTrigger.Condition
  isSpec: "True"
  fullName: FileManager.ShowTrigger.Condition
  nameWithType: ShowTrigger.Condition
- uid: Interfaces
  name: Interfaces
  href: api/Interfaces.html
  commentId: N:Interfaces
  fullName: Interfaces
  nameWithType: Interfaces
- uid: Interfaces.ITrigger`1
  name: ITrigger<TContext>
  href: api/Interfaces.ITrigger-1.html
  commentId: T:Interfaces.ITrigger`1
  name.vb: ITrigger(Of TContext)
  fullName: Interfaces.ITrigger<TContext>
  fullName.vb: Interfaces.ITrigger(Of TContext)
  nameWithType: ITrigger<TContext>
  nameWithType.vb: ITrigger(Of TContext)
- uid: Interfaces.ITrigger`1.Action(`0)
  name: Action(TContext)
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Action__0_
  commentId: M:Interfaces.ITrigger`1.Action(`0)
  fullName: Interfaces.ITrigger<TContext>.Action(TContext)
  fullName.vb: Interfaces.ITrigger(Of TContext).Action(TContext)
  nameWithType: ITrigger<TContext>.Action(TContext)
  nameWithType.vb: ITrigger(Of TContext).Action(TContext)
- uid: Interfaces.ITrigger`1.Action*
  name: Action
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Action_
  commentId: Overload:Interfaces.ITrigger`1.Action
  isSpec: "True"
  fullName: Interfaces.ITrigger<TContext>.Action
  fullName.vb: Interfaces.ITrigger(Of TContext).Action
  nameWithType: ITrigger<TContext>.Action
  nameWithType.vb: ITrigger(Of TContext).Action
- uid: Interfaces.ITrigger`1.Condition(`0)
  name: Condition(TContext)
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Condition__0_
  commentId: M:Interfaces.ITrigger`1.Condition(`0)
  fullName: Interfaces.ITrigger<TContext>.Condition(TContext)
  fullName.vb: Interfaces.ITrigger(Of TContext).Condition(TContext)
  nameWithType: ITrigger<TContext>.Condition(TContext)
  nameWithType.vb: ITrigger(Of TContext).Condition(TContext)
- uid: Interfaces.ITrigger`1.Condition*
  name: Condition
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Condition_
  commentId: Overload:Interfaces.ITrigger`1.Condition
  isSpec: "True"
  fullName: Interfaces.ITrigger<TContext>.Condition
  fullName.vb: Interfaces.ITrigger(Of TContext).Condition
  nameWithType: ITrigger<TContext>.Condition
  nameWithType.vb: ITrigger(Of TContext).Condition
- uid: Platform.Bot
  name: Platform.Bot
  href: api/Platform.Bot.html
  commentId: N:Platform.Bot
  fullName: Platform.Bot
  nameWithType: Platform.Bot
- uid: Platform.Bot.ProgrammerRole
  name: ProgrammerRole
  href: api/Platform.Bot.ProgrammerRole.html
  commentId: T:Platform.Bot.ProgrammerRole
  fullName: Platform.Bot.ProgrammerRole
  nameWithType: ProgrammerRole
- uid: Platform.Bot.ProgrammerRole.#ctor(List{Interfaces.ITrigger{Issue}},Storage.Remote.GitHub.GitHubStorage)
  name: ProgrammerRole(List<ITrigger<Issue>>, GitHubStorage)
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole__ctor_List_Interfaces_ITrigger_Issue___Storage_Remote_GitHub_GitHubStorage_
  commentId: M:Platform.Bot.ProgrammerRole.#ctor(List{Interfaces.ITrigger{Issue}},Storage.Remote.GitHub.GitHubStorage)
  name.vb: ProgrammerRole(List(Of ITrigger(Of Issue)), GitHubStorage)
  fullName: Platform.Bot.ProgrammerRole.ProgrammerRole(List<Interfaces.ITrigger<Issue>>, Storage.Remote.GitHub.GitHubStorage)
  fullName.vb: Platform.Bot.ProgrammerRole.ProgrammerRole(List(Of Interfaces.ITrigger(Of Issue)), Storage.Remote.GitHub.GitHubStorage)
  nameWithType: ProgrammerRole.ProgrammerRole(List<ITrigger<Issue>>, GitHubStorage)
  nameWithType.vb: ProgrammerRole.ProgrammerRole(List(Of ITrigger(Of Issue)), GitHubStorage)
- uid: Platform.Bot.ProgrammerRole.#ctor*
  name: ProgrammerRole
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole__ctor_
  commentId: Overload:Platform.Bot.ProgrammerRole.#ctor
  isSpec: "True"
  fullName: Platform.Bot.ProgrammerRole.ProgrammerRole
  nameWithType: ProgrammerRole.ProgrammerRole
- uid: Platform.Bot.ProgrammerRole.GitHubAPI
  name: GitHubAPI
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole_GitHubAPI
  commentId: F:Platform.Bot.ProgrammerRole.GitHubAPI
  fullName: Platform.Bot.ProgrammerRole.GitHubAPI
  nameWithType: ProgrammerRole.GitHubAPI
- uid: Platform.Bot.ProgrammerRole.MinimumInteractionInterval
  name: MinimumInteractionInterval
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole_MinimumInteractionInterval
  commentId: F:Platform.Bot.ProgrammerRole.MinimumInteractionInterval
  fullName: Platform.Bot.ProgrammerRole.MinimumInteractionInterval
  nameWithType: ProgrammerRole.MinimumInteractionInterval
- uid: Platform.Bot.ProgrammerRole.Start(CancellationToken)
  name: Start(CancellationToken)
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole_Start_CancellationToken_
  commentId: M:Platform.Bot.ProgrammerRole.Start(CancellationToken)
  fullName: Platform.Bot.ProgrammerRole.Start(CancellationToken)
  nameWithType: ProgrammerRole.Start(CancellationToken)
- uid: Platform.Bot.ProgrammerRole.Start*
  name: Start
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole_Start_
  commentId: Overload:Platform.Bot.ProgrammerRole.Start
  isSpec: "True"
  fullName: Platform.Bot.ProgrammerRole.Start
  nameWithType: ProgrammerRole.Start
- uid: Platform.Bot.ProgrammerRole.Triggers
  name: Triggers
  href: api/Platform.Bot.ProgrammerRole.html#Platform_Bot_ProgrammerRole_Triggers
  commentId: F:Platform.Bot.ProgrammerRole.Triggers
  fullName: Platform.Bot.ProgrammerRole.Triggers
  nameWithType: ProgrammerRole.Triggers
- uid: Storage.Local
  name: Storage.Local
  href: api/Storage.Local.html
  commentId: N:Storage.Local
  fullName: Storage.Local
  nameWithType: Storage.Local
- uid: Storage.Local.File
  name: File
  href: api/Storage.Local.File.html
  commentId: T:Storage.Local.File
  fullName: Storage.Local.File
  nameWithType: File
- uid: Storage.Local.File.Content
  name: Content
  href: api/Storage.Local.File.html#Storage_Local_File_Content
  commentId: P:Storage.Local.File.Content
  fullName: Storage.Local.File.Content
  nameWithType: File.Content
- uid: Storage.Local.File.Content*
  name: Content
  href: api/Storage.Local.File.html#Storage_Local_File_Content_
  commentId: Overload:Storage.Local.File.Content
  isSpec: "True"
  fullName: Storage.Local.File.Content
  nameWithType: File.Content
- uid: Storage.Local.File.Path
  name: Path
  href: api/Storage.Local.File.html#Storage_Local_File_Path
  commentId: P:Storage.Local.File.Path
  fullName: Storage.Local.File.Path
  nameWithType: File.Path
- uid: Storage.Local.File.Path*
  name: Path
  href: api/Storage.Local.File.html#Storage_Local_File_Path_
  commentId: Overload:Storage.Local.File.Path
  isSpec: "True"
  fullName: Storage.Local.File.Path
  nameWithType: File.Path
- uid: Storage.Local.FileStorage
  name: FileStorage
  href: api/Storage.Local.FileStorage.html
  commentId: T:Storage.Local.FileStorage
  fullName: Storage.Local.FileStorage
  nameWithType: FileStorage
- uid: Storage.Local.FileStorage.#ctor(System.String)
  name: FileStorage(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage__ctor_System_String_
  commentId: M:Storage.Local.FileStorage.#ctor(System.String)
  fullName: Storage.Local.FileStorage.FileStorage(System.String)
  nameWithType: FileStorage.FileStorage(String)
- uid: Storage.Local.FileStorage.#ctor*
  name: FileStorage
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage__ctor_
  commentId: Overload:Storage.Local.FileStorage.#ctor
  isSpec: "True"
  fullName: Storage.Local.FileStorage.FileStorage
  nameWithType: FileStorage.FileStorage
- uid: Storage.Local.FileStorage.AddFile(System.String)
  name: AddFile(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFile_System_String_
  commentId: M:Storage.Local.FileStorage.AddFile(System.String)
  fullName: Storage.Local.FileStorage.AddFile(System.String)
  nameWithType: FileStorage.AddFile(String)
- uid: Storage.Local.FileStorage.AddFile*
  name: AddFile
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFile_
  commentId: Overload:Storage.Local.FileStorage.AddFile
  isSpec: "True"
  fullName: Storage.Local.FileStorage.AddFile
  nameWithType: FileStorage.AddFile
- uid: Storage.Local.FileStorage.AddFileToSet(System.UInt64,System.UInt64,System.String)
  name: AddFileToSet(System.UInt64, System.UInt64, String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFileToSet_System_UInt64_System_UInt64_System_String_
  commentId: M:Storage.Local.FileStorage.AddFileToSet(System.UInt64,System.UInt64,System.String)
  fullName: Storage.Local.FileStorage.AddFileToSet(System.UInt64, System.UInt64, System.String)
  nameWithType: FileStorage.AddFileToSet(System.UInt64, System.UInt64, String)
- uid: Storage.Local.FileStorage.AddFileToSet*
  name: AddFileToSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFileToSet_
  commentId: Overload:Storage.Local.FileStorage.AddFileToSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.AddFileToSet
  nameWithType: FileStorage.AddFileToSet
- uid: Storage.Local.FileStorage.AllLinksToString
  name: AllLinksToString()
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AllLinksToString
  commentId: M:Storage.Local.FileStorage.AllLinksToString
  fullName: Storage.Local.FileStorage.AllLinksToString()
  nameWithType: FileStorage.AllLinksToString()
- uid: Storage.Local.FileStorage.AllLinksToString*
  name: AllLinksToString
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AllLinksToString_
  commentId: Overload:Storage.Local.FileStorage.AllLinksToString
  isSpec: "True"
  fullName: Storage.Local.FileStorage.AllLinksToString
  nameWithType: FileStorage.AllLinksToString
- uid: Storage.Local.FileStorage.Convert(System.String)
  name: Convert(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Convert_System_String_
  commentId: M:Storage.Local.FileStorage.Convert(System.String)
  fullName: Storage.Local.FileStorage.Convert(System.String)
  nameWithType: FileStorage.Convert(String)
- uid: Storage.Local.FileStorage.Convert(System.UInt64)
  name: Convert(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Convert_System_UInt64_
  commentId: M:Storage.Local.FileStorage.Convert(System.UInt64)
  fullName: Storage.Local.FileStorage.Convert(System.UInt64)
  nameWithType: FileStorage.Convert(System.UInt64)
- uid: Storage.Local.FileStorage.Convert*
  name: Convert
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Convert_
  commentId: Overload:Storage.Local.FileStorage.Convert
  isSpec: "True"
  fullName: Storage.Local.FileStorage.Convert
  nameWithType: FileStorage.Convert
- uid: Storage.Local.FileStorage.CreateFileSet(System.String)
  name: CreateFileSet(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateFileSet_System_String_
  commentId: M:Storage.Local.FileStorage.CreateFileSet(System.String)
  fullName: Storage.Local.FileStorage.CreateFileSet(System.String)
  nameWithType: FileStorage.CreateFileSet(String)
- uid: Storage.Local.FileStorage.CreateFileSet*
  name: CreateFileSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateFileSet_
  commentId: Overload:Storage.Local.FileStorage.CreateFileSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.CreateFileSet
  nameWithType: FileStorage.CreateFileSet
- uid: Storage.Local.FileStorage.Delete(System.UInt64)
  name: Delete(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Delete_System_UInt64_
  commentId: M:Storage.Local.FileStorage.Delete(System.UInt64)
  fullName: Storage.Local.FileStorage.Delete(System.UInt64)
  nameWithType: FileStorage.Delete(System.UInt64)
- uid: Storage.Local.FileStorage.Delete*
  name: Delete
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Delete_
  commentId: Overload:Storage.Local.FileStorage.Delete
  isSpec: "True"
  fullName: Storage.Local.FileStorage.Delete
  nameWithType: FileStorage.Delete
- uid: Storage.Local.FileStorage.GetAllFiles
  name: GetAllFiles()
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetAllFiles
  commentId: M:Storage.Local.FileStorage.GetAllFiles
  fullName: Storage.Local.FileStorage.GetAllFiles()
  nameWithType: FileStorage.GetAllFiles()
- uid: Storage.Local.FileStorage.GetAllFiles*
  name: GetAllFiles
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetAllFiles_
  commentId: Overload:Storage.Local.FileStorage.GetAllFiles
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetAllFiles
  nameWithType: FileStorage.GetAllFiles
- uid: Storage.Local.FileStorage.GetFileContent(System.UInt64)
  name: GetFileContent(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileContent_System_UInt64_
  commentId: M:Storage.Local.FileStorage.GetFileContent(System.UInt64)
  fullName: Storage.Local.FileStorage.GetFileContent(System.UInt64)
  nameWithType: FileStorage.GetFileContent(System.UInt64)
- uid: Storage.Local.FileStorage.GetFileContent*
  name: GetFileContent
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileContent_
  commentId: Overload:Storage.Local.FileStorage.GetFileContent
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetFileContent
  nameWithType: FileStorage.GetFileContent
- uid: Storage.Local.FileStorage.GetFileSet(System.String)
  name: GetFileSet(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileSet_System_String_
  commentId: M:Storage.Local.FileStorage.GetFileSet(System.String)
  fullName: Storage.Local.FileStorage.GetFileSet(System.String)
  nameWithType: FileStorage.GetFileSet(String)
- uid: Storage.Local.FileStorage.GetFileSet*
  name: GetFileSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileSet_
  commentId: Overload:Storage.Local.FileStorage.GetFileSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetFileSet
  nameWithType: FileStorage.GetFileSet
- uid: Storage.Local.FileStorage.GetFilesFromSet(System.String)
  name: GetFilesFromSet(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFilesFromSet_System_String_
  commentId: M:Storage.Local.FileStorage.GetFilesFromSet(System.String)
  fullName: Storage.Local.FileStorage.GetFilesFromSet(System.String)
  nameWithType: FileStorage.GetFilesFromSet(String)
- uid: Storage.Local.FileStorage.GetFilesFromSet*
  name: GetFilesFromSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFilesFromSet_
  commentId: Overload:Storage.Local.FileStorage.GetFilesFromSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetFilesFromSet
  nameWithType: FileStorage.GetFilesFromSet
- uid: Storage.Remote.GitHub
  name: Storage.Remote.GitHub
  href: api/Storage.Remote.GitHub.html
  commentId: N:Storage.Remote.GitHub
  fullName: Storage.Remote.GitHub
  nameWithType: Storage.Remote.GitHub
- uid: Storage.Remote.GitHub.GitHubStorage
  name: GitHubStorage
  href: api/Storage.Remote.GitHub.GitHubStorage.html
  commentId: T:Storage.Remote.GitHub.GitHubStorage
  fullName: Storage.Remote.GitHub.GitHubStorage
  nameWithType: GitHubStorage
- uid: Storage.Remote.GitHub.GitHubStorage.#ctor(System.String,System.String,System.String)
  name: GitHubStorage(String, String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage__ctor_System_String_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.#ctor(System.String,System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GitHubStorage(System.String, System.String, System.String)
  nameWithType: GitHubStorage.GitHubStorage(String, String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.#ctor*
  name: GitHubStorage
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage__ctor_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.#ctor
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GitHubStorage
  nameWithType: GitHubStorage.GitHubStorage
- uid: Storage.Remote.GitHub.GitHubStorage.Client
  name: Client
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_Client
  commentId: F:Storage.Remote.GitHub.GitHubStorage.Client
  fullName: Storage.Remote.GitHub.GitHubStorage.Client
  nameWithType: GitHubStorage.Client
- uid: Storage.Remote.GitHub.GitHubStorage.CloseIssue(Issue)
  name: CloseIssue(Issue)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CloseIssue_Issue_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CloseIssue(Issue)
  fullName: Storage.Remote.GitHub.GitHubStorage.CloseIssue(Issue)
  nameWithType: GitHubStorage.CloseIssue(Issue)
- uid: Storage.Remote.GitHub.GitHubStorage.CloseIssue*
  name: CloseIssue
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CloseIssue_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CloseIssue
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CloseIssue
  nameWithType: GitHubStorage.CloseIssue
- uid: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile(System.String,System.String,Storage.Local.File)
  name: CreateOrUpdateFile(String, String, File)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateOrUpdateFile_System_String_System_String_Storage_Local_File_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile(System.String,System.String,Storage.Local.File)
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile(System.String, System.String, Storage.Local.File)
  nameWithType: GitHubStorage.CreateOrUpdateFile(String, String, File)
- uid: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile*
  name: CreateOrUpdateFile
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateOrUpdateFile_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile
  nameWithType: GitHubStorage.CreateOrUpdateFile
- uid: Storage.Remote.GitHub.GitHubStorage.GetCommits(System.String,System.String)
  name: GetCommits(String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetCommits_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetCommits(System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetCommits(System.String, System.String)
  nameWithType: GitHubStorage.GetCommits(String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetCommits(System.String,System.String,DateTime)
  name: GetCommits(String, String, DateTime)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetCommits_System_String_System_String_DateTime_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetCommits(System.String,System.String,DateTime)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetCommits(System.String, System.String, DateTime)
  nameWithType: GitHubStorage.GetCommits(String, String, DateTime)
- uid: Storage.Remote.GitHub.GitHubStorage.GetCommits*
  name: GetCommits
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetCommits_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetCommits
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetCommits
  nameWithType: GitHubStorage.GetCommits
- uid: Storage.Remote.GitHub.GitHubStorage.GetIssues
  name: GetIssues()
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetIssues
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetIssues
  fullName: Storage.Remote.GitHub.GitHubStorage.GetIssues()
  nameWithType: GitHubStorage.GetIssues()
- uid: Storage.Remote.GitHub.GitHubStorage.GetIssues(System.String,System.String)
  name: GetIssues(String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetIssues_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetIssues(System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetIssues(System.String, System.String)
  nameWithType: GitHubStorage.GetIssues(String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetIssues*
  name: GetIssues
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetIssues_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetIssues
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetIssues
  nameWithType: GitHubStorage.GetIssues
- uid: Storage.Remote.GitHub.GitHubStorage.GetPullRequests(System.String,System.String)
  name: GetPullRequests(String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetPullRequests_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetPullRequests(System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetPullRequests(System.String, System.String)
  nameWithType: GitHubStorage.GetPullRequests(String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetPullRequests*
  name: GetPullRequests
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetPullRequests_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetPullRequests
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetPullRequests
  nameWithType: GitHubStorage.GetPullRequests
- uid: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  name: MinimumInteractionInterval
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_MinimumInteractionInterval
  commentId: P:Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  fullName: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  nameWithType: GitHubStorage.MinimumInteractionInterval
- uid: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval*
  name: MinimumInteractionInterval
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_MinimumInteractionInterval_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  nameWithType: GitHubStorage.MinimumInteractionInterval
- uid: Storage.Remote.GitHub.GitHubStorage.Owner
  name: Owner
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_Owner
  commentId: F:Storage.Remote.GitHub.GitHubStorage.Owner
  fullName: Storage.Remote.GitHub.GitHubStorage.Owner
  nameWithType: GitHubStorage.Owner
