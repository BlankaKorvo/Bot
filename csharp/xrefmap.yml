### YamlMime:XRefMap
sorted: true
references:
- uid: FileManager
  name: FileManager
  href: api/FileManager.html
  commentId: N:FileManager
  fullName: FileManager
  nameWithType: FileManager
- uid: FileManager.Context
  name: Context
  href: api/FileManager.Context.html
  commentId: T:FileManager.Context
  fullName: FileManager.Context
  nameWithType: Context
- uid: FileManager.Context.Args
  name: Args
  href: api/FileManager.Context.html#FileManager_Context_Args
  commentId: P:FileManager.Context.Args
  fullName: FileManager.Context.Args
  nameWithType: Context.Args
- uid: FileManager.Context.Args*
  name: Args
  href: api/FileManager.Context.html#FileManager_Context_Args_
  commentId: Overload:FileManager.Context.Args
  isSpec: "True"
  fullName: FileManager.Context.Args
  nameWithType: Context.Args
- uid: FileManager.Context.FileStorage
  name: FileStorage
  href: api/FileManager.Context.html#FileManager_Context_FileStorage
  commentId: P:FileManager.Context.FileStorage
  fullName: FileManager.Context.FileStorage
  nameWithType: Context.FileStorage
- uid: FileManager.Context.FileStorage*
  name: FileStorage
  href: api/FileManager.Context.html#FileManager_Context_FileStorage_
  commentId: Overload:FileManager.Context.FileStorage
  isSpec: "True"
  fullName: FileManager.Context.FileStorage
  nameWithType: Context.FileStorage
- uid: FileManager.CreateFileSetTrigger
  name: CreateFileSetTrigger
  href: api/FileManager.CreateFileSetTrigger.html
  commentId: T:FileManager.CreateFileSetTrigger
  fullName: FileManager.CreateFileSetTrigger
  nameWithType: CreateFileSetTrigger
- uid: FileManager.CreateFileSetTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Action_FileManager_Context_
  commentId: M:FileManager.CreateFileSetTrigger.Action(FileManager.Context)
  fullName: FileManager.CreateFileSetTrigger.Action(FileManager.Context)
  nameWithType: CreateFileSetTrigger.Action(Context)
- uid: FileManager.CreateFileSetTrigger.Action*
  name: Action
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Action_
  commentId: Overload:FileManager.CreateFileSetTrigger.Action
  isSpec: "True"
  fullName: FileManager.CreateFileSetTrigger.Action
  nameWithType: CreateFileSetTrigger.Action
- uid: FileManager.CreateFileSetTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.CreateFileSetTrigger.Condition(FileManager.Context)
  fullName: FileManager.CreateFileSetTrigger.Condition(FileManager.Context)
  nameWithType: CreateFileSetTrigger.Condition(Context)
- uid: FileManager.CreateFileSetTrigger.Condition*
  name: Condition
  href: api/FileManager.CreateFileSetTrigger.html#FileManager_CreateFileSetTrigger_Condition_
  commentId: Overload:FileManager.CreateFileSetTrigger.Condition
  isSpec: "True"
  fullName: FileManager.CreateFileSetTrigger.Condition
  nameWithType: CreateFileSetTrigger.Condition
- uid: FileManager.CreateTrigger
  name: CreateTrigger
  href: api/FileManager.CreateTrigger.html
  commentId: T:FileManager.CreateTrigger
  fullName: FileManager.CreateTrigger
  nameWithType: CreateTrigger
- uid: FileManager.CreateTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Action_FileManager_Context_
  commentId: M:FileManager.CreateTrigger.Action(FileManager.Context)
  fullName: FileManager.CreateTrigger.Action(FileManager.Context)
  nameWithType: CreateTrigger.Action(Context)
- uid: FileManager.CreateTrigger.Action*
  name: Action
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Action_
  commentId: Overload:FileManager.CreateTrigger.Action
  isSpec: "True"
  fullName: FileManager.CreateTrigger.Action
  nameWithType: CreateTrigger.Action
- uid: FileManager.CreateTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.CreateTrigger.Condition(FileManager.Context)
  fullName: FileManager.CreateTrigger.Condition(FileManager.Context)
  nameWithType: CreateTrigger.Condition(Context)
- uid: FileManager.CreateTrigger.Condition*
  name: Condition
  href: api/FileManager.CreateTrigger.html#FileManager_CreateTrigger_Condition_
  commentId: Overload:FileManager.CreateTrigger.Condition
  isSpec: "True"
  fullName: FileManager.CreateTrigger.Condition
  nameWithType: CreateTrigger.Condition
- uid: FileManager.DeleteTrigger
  name: DeleteTrigger
  href: api/FileManager.DeleteTrigger.html
  commentId: T:FileManager.DeleteTrigger
  fullName: FileManager.DeleteTrigger
  nameWithType: DeleteTrigger
- uid: FileManager.DeleteTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Action_FileManager_Context_
  commentId: M:FileManager.DeleteTrigger.Action(FileManager.Context)
  fullName: FileManager.DeleteTrigger.Action(FileManager.Context)
  nameWithType: DeleteTrigger.Action(Context)
- uid: FileManager.DeleteTrigger.Action*
  name: Action
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Action_
  commentId: Overload:FileManager.DeleteTrigger.Action
  isSpec: "True"
  fullName: FileManager.DeleteTrigger.Action
  nameWithType: DeleteTrigger.Action
- uid: FileManager.DeleteTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.DeleteTrigger.Condition(FileManager.Context)
  fullName: FileManager.DeleteTrigger.Condition(FileManager.Context)
  nameWithType: DeleteTrigger.Condition(Context)
- uid: FileManager.DeleteTrigger.Condition*
  name: Condition
  href: api/FileManager.DeleteTrigger.html#FileManager_DeleteTrigger_Condition_
  commentId: Overload:FileManager.DeleteTrigger.Condition
  isSpec: "True"
  fullName: FileManager.DeleteTrigger.Condition
  nameWithType: DeleteTrigger.Condition
- uid: FileManager.GetFilesByFileSetNameTrigger
  name: GetFilesByFileSetNameTrigger
  href: api/FileManager.GetFilesByFileSetNameTrigger.html
  commentId: T:FileManager.GetFilesByFileSetNameTrigger
  fullName: FileManager.GetFilesByFileSetNameTrigger
  nameWithType: GetFilesByFileSetNameTrigger
- uid: FileManager.GetFilesByFileSetNameTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Action_FileManager_Context_
  commentId: M:FileManager.GetFilesByFileSetNameTrigger.Action(FileManager.Context)
  fullName: FileManager.GetFilesByFileSetNameTrigger.Action(FileManager.Context)
  nameWithType: GetFilesByFileSetNameTrigger.Action(Context)
- uid: FileManager.GetFilesByFileSetNameTrigger.Action*
  name: Action
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Action_
  commentId: Overload:FileManager.GetFilesByFileSetNameTrigger.Action
  isSpec: "True"
  fullName: FileManager.GetFilesByFileSetNameTrigger.Action
  nameWithType: GetFilesByFileSetNameTrigger.Action
- uid: FileManager.GetFilesByFileSetNameTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.GetFilesByFileSetNameTrigger.Condition(FileManager.Context)
  fullName: FileManager.GetFilesByFileSetNameTrigger.Condition(FileManager.Context)
  nameWithType: GetFilesByFileSetNameTrigger.Condition(Context)
- uid: FileManager.GetFilesByFileSetNameTrigger.Condition*
  name: Condition
  href: api/FileManager.GetFilesByFileSetNameTrigger.html#FileManager_GetFilesByFileSetNameTrigger_Condition_
  commentId: Overload:FileManager.GetFilesByFileSetNameTrigger.Condition
  isSpec: "True"
  fullName: FileManager.GetFilesByFileSetNameTrigger.Condition
  nameWithType: GetFilesByFileSetNameTrigger.Condition
- uid: FileManager.HelpTrigger
  name: HelpTrigger
  href: api/FileManager.HelpTrigger.html
  commentId: T:FileManager.HelpTrigger
  fullName: FileManager.HelpTrigger
  nameWithType: HelpTrigger
- uid: FileManager.HelpTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Action_FileManager_Context_
  commentId: M:FileManager.HelpTrigger.Action(FileManager.Context)
  fullName: FileManager.HelpTrigger.Action(FileManager.Context)
  nameWithType: HelpTrigger.Action(Context)
- uid: FileManager.HelpTrigger.Action*
  name: Action
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Action_
  commentId: Overload:FileManager.HelpTrigger.Action
  isSpec: "True"
  fullName: FileManager.HelpTrigger.Action
  nameWithType: HelpTrigger.Action
- uid: FileManager.HelpTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.HelpTrigger.Condition(FileManager.Context)
  fullName: FileManager.HelpTrigger.Condition(FileManager.Context)
  nameWithType: HelpTrigger.Condition(Context)
- uid: FileManager.HelpTrigger.Condition*
  name: Condition
  href: api/FileManager.HelpTrigger.html#FileManager_HelpTrigger_Condition_
  commentId: Overload:FileManager.HelpTrigger.Condition
  isSpec: "True"
  fullName: FileManager.HelpTrigger.Condition
  nameWithType: HelpTrigger.Condition
- uid: FileManager.LinksPrinterTrigger
  name: LinksPrinterTrigger
  href: api/FileManager.LinksPrinterTrigger.html
  commentId: T:FileManager.LinksPrinterTrigger
  fullName: FileManager.LinksPrinterTrigger
  nameWithType: LinksPrinterTrigger
- uid: FileManager.LinksPrinterTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Action_FileManager_Context_
  commentId: M:FileManager.LinksPrinterTrigger.Action(FileManager.Context)
  fullName: FileManager.LinksPrinterTrigger.Action(FileManager.Context)
  nameWithType: LinksPrinterTrigger.Action(Context)
- uid: FileManager.LinksPrinterTrigger.Action*
  name: Action
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Action_
  commentId: Overload:FileManager.LinksPrinterTrigger.Action
  isSpec: "True"
  fullName: FileManager.LinksPrinterTrigger.Action
  nameWithType: LinksPrinterTrigger.Action
- uid: FileManager.LinksPrinterTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.LinksPrinterTrigger.Condition(FileManager.Context)
  fullName: FileManager.LinksPrinterTrigger.Condition(FileManager.Context)
  nameWithType: LinksPrinterTrigger.Condition(Context)
- uid: FileManager.LinksPrinterTrigger.Condition*
  name: Condition
  href: api/FileManager.LinksPrinterTrigger.html#FileManager_LinksPrinterTrigger_Condition_
  commentId: Overload:FileManager.LinksPrinterTrigger.Condition
  isSpec: "True"
  fullName: FileManager.LinksPrinterTrigger.Condition
  nameWithType: LinksPrinterTrigger.Condition
- uid: FileManager.ShowTrigger
  name: ShowTrigger
  href: api/FileManager.ShowTrigger.html
  commentId: T:FileManager.ShowTrigger
  fullName: FileManager.ShowTrigger
  nameWithType: ShowTrigger
- uid: FileManager.ShowTrigger.Action(FileManager.Context)
  name: Action(Context)
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Action_FileManager_Context_
  commentId: M:FileManager.ShowTrigger.Action(FileManager.Context)
  fullName: FileManager.ShowTrigger.Action(FileManager.Context)
  nameWithType: ShowTrigger.Action(Context)
- uid: FileManager.ShowTrigger.Action*
  name: Action
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Action_
  commentId: Overload:FileManager.ShowTrigger.Action
  isSpec: "True"
  fullName: FileManager.ShowTrigger.Action
  nameWithType: ShowTrigger.Action
- uid: FileManager.ShowTrigger.Condition(FileManager.Context)
  name: Condition(Context)
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Condition_FileManager_Context_
  commentId: M:FileManager.ShowTrigger.Condition(FileManager.Context)
  fullName: FileManager.ShowTrigger.Condition(FileManager.Context)
  nameWithType: ShowTrigger.Condition(Context)
- uid: FileManager.ShowTrigger.Condition*
  name: Condition
  href: api/FileManager.ShowTrigger.html#FileManager_ShowTrigger_Condition_
  commentId: Overload:FileManager.ShowTrigger.Condition
  isSpec: "True"
  fullName: FileManager.ShowTrigger.Condition
  nameWithType: ShowTrigger.Condition
- uid: Interfaces
  name: Interfaces
  href: api/Interfaces.html
  commentId: N:Interfaces
  fullName: Interfaces
  nameWithType: Interfaces
- uid: Interfaces.ITracker`1
  name: ITracker<TContext>
  href: api/Interfaces.ITracker-1.html
  commentId: T:Interfaces.ITracker`1
  name.vb: ITracker(Of TContext)
  fullName: Interfaces.ITracker<TContext>
  fullName.vb: Interfaces.ITracker(Of TContext)
  nameWithType: ITracker<TContext>
  nameWithType.vb: ITracker(Of TContext)
- uid: Interfaces.ITracker`1.Start(CancellationToken)
  name: Start(CancellationToken)
  href: api/Interfaces.ITracker-1.html#Interfaces_ITracker_1_Start_CancellationToken_
  commentId: M:Interfaces.ITracker`1.Start(CancellationToken)
  fullName: Interfaces.ITracker<TContext>.Start(CancellationToken)
  fullName.vb: Interfaces.ITracker(Of TContext).Start(CancellationToken)
  nameWithType: ITracker<TContext>.Start(CancellationToken)
  nameWithType.vb: ITracker(Of TContext).Start(CancellationToken)
- uid: Interfaces.ITracker`1.Start*
  name: Start
  href: api/Interfaces.ITracker-1.html#Interfaces_ITracker_1_Start_
  commentId: Overload:Interfaces.ITracker`1.Start
  isSpec: "True"
  fullName: Interfaces.ITracker<TContext>.Start
  fullName.vb: Interfaces.ITracker(Of TContext).Start
  nameWithType: ITracker<TContext>.Start
  nameWithType.vb: ITracker(Of TContext).Start
- uid: Interfaces.ITrigger`1
  name: ITrigger<TContext>
  href: api/Interfaces.ITrigger-1.html
  commentId: T:Interfaces.ITrigger`1
  name.vb: ITrigger(Of TContext)
  fullName: Interfaces.ITrigger<TContext>
  fullName.vb: Interfaces.ITrigger(Of TContext)
  nameWithType: ITrigger<TContext>
  nameWithType.vb: ITrigger(Of TContext)
- uid: Interfaces.ITrigger`1.Action(`0)
  name: Action(TContext)
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Action__0_
  commentId: M:Interfaces.ITrigger`1.Action(`0)
  fullName: Interfaces.ITrigger<TContext>.Action(TContext)
  fullName.vb: Interfaces.ITrigger(Of TContext).Action(TContext)
  nameWithType: ITrigger<TContext>.Action(TContext)
  nameWithType.vb: ITrigger(Of TContext).Action(TContext)
- uid: Interfaces.ITrigger`1.Action*
  name: Action
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Action_
  commentId: Overload:Interfaces.ITrigger`1.Action
  isSpec: "True"
  fullName: Interfaces.ITrigger<TContext>.Action
  fullName.vb: Interfaces.ITrigger(Of TContext).Action
  nameWithType: ITrigger<TContext>.Action
  nameWithType.vb: ITrigger(Of TContext).Action
- uid: Interfaces.ITrigger`1.Condition(`0)
  name: Condition(TContext)
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Condition__0_
  commentId: M:Interfaces.ITrigger`1.Condition(`0)
  fullName: Interfaces.ITrigger<TContext>.Condition(TContext)
  fullName.vb: Interfaces.ITrigger(Of TContext).Condition(TContext)
  nameWithType: ITrigger<TContext>.Condition(TContext)
  nameWithType.vb: ITrigger(Of TContext).Condition(TContext)
- uid: Interfaces.ITrigger`1.Condition*
  name: Condition
  href: api/Interfaces.ITrigger-1.html#Interfaces_ITrigger_1_Condition_
  commentId: Overload:Interfaces.ITrigger`1.Condition
  isSpec: "True"
  fullName: Interfaces.ITrigger<TContext>.Condition
  fullName.vb: Interfaces.ITrigger(Of TContext).Condition
  nameWithType: ITrigger<TContext>.Condition
  nameWithType.vb: ITrigger(Of TContext).Condition
- uid: Platform.Bot.Trackers
  name: Platform.Bot.Trackers
  href: api/Platform.Bot.Trackers.html
  commentId: N:Platform.Bot.Trackers
  fullName: Platform.Bot.Trackers
  nameWithType: Platform.Bot.Trackers
- uid: Platform.Bot.Trackers.DateTimeTracker
  name: DateTimeTracker
  href: api/Platform.Bot.Trackers.DateTimeTracker.html
  commentId: T:Platform.Bot.Trackers.DateTimeTracker
  fullName: Platform.Bot.Trackers.DateTimeTracker
  nameWithType: DateTimeTracker
- uid: Platform.Bot.Trackers.DateTimeTracker.#ctor(Storage.Remote.GitHub.GitHubStorage,Interfaces.ITrigger{System.Nullable{DateTime}}[])
  name: DateTimeTracker(GitHubStorage, ITrigger<Nullable<DateTime>>[])
  href: api/Platform.Bot.Trackers.DateTimeTracker.html#Platform_Bot_Trackers_DateTimeTracker__ctor_Storage_Remote_GitHub_GitHubStorage_Interfaces_ITrigger_System_Nullable_DateTime_____
  commentId: M:Platform.Bot.Trackers.DateTimeTracker.#ctor(Storage.Remote.GitHub.GitHubStorage,Interfaces.ITrigger{System.Nullable{DateTime}}[])
  name.vb: DateTimeTracker(GitHubStorage, ITrigger(Of Nullable(Of DateTime))())
  fullName: Platform.Bot.Trackers.DateTimeTracker.DateTimeTracker(Storage.Remote.GitHub.GitHubStorage, Interfaces.ITrigger<System.Nullable<DateTime>>[])
  fullName.vb: Platform.Bot.Trackers.DateTimeTracker.DateTimeTracker(Storage.Remote.GitHub.GitHubStorage, Interfaces.ITrigger(Of System.Nullable(Of DateTime))())
  nameWithType: DateTimeTracker.DateTimeTracker(GitHubStorage, ITrigger<Nullable<DateTime>>[])
  nameWithType.vb: DateTimeTracker.DateTimeTracker(GitHubStorage, ITrigger(Of Nullable(Of DateTime))())
- uid: Platform.Bot.Trackers.DateTimeTracker.#ctor*
  name: DateTimeTracker
  href: api/Platform.Bot.Trackers.DateTimeTracker.html#Platform_Bot_Trackers_DateTimeTracker__ctor_
  commentId: Overload:Platform.Bot.Trackers.DateTimeTracker.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Trackers.DateTimeTracker.DateTimeTracker
  nameWithType: DateTimeTracker.DateTimeTracker
- uid: Platform.Bot.Trackers.DateTimeTracker.Start(CancellationToken)
  name: Start(CancellationToken)
  href: api/Platform.Bot.Trackers.DateTimeTracker.html#Platform_Bot_Trackers_DateTimeTracker_Start_CancellationToken_
  commentId: M:Platform.Bot.Trackers.DateTimeTracker.Start(CancellationToken)
  fullName: Platform.Bot.Trackers.DateTimeTracker.Start(CancellationToken)
  nameWithType: DateTimeTracker.Start(CancellationToken)
- uid: Platform.Bot.Trackers.DateTimeTracker.Start*
  name: Start
  href: api/Platform.Bot.Trackers.DateTimeTracker.html#Platform_Bot_Trackers_DateTimeTracker_Start_
  commentId: Overload:Platform.Bot.Trackers.DateTimeTracker.Start
  isSpec: "True"
  fullName: Platform.Bot.Trackers.DateTimeTracker.Start
  nameWithType: DateTimeTracker.Start
- uid: Platform.Bot.Trackers.IssueTracker
  name: IssueTracker
  href: api/Platform.Bot.Trackers.IssueTracker.html
  commentId: T:Platform.Bot.Trackers.IssueTracker
  fullName: Platform.Bot.Trackers.IssueTracker
  nameWithType: IssueTracker
- uid: Platform.Bot.Trackers.IssueTracker.#ctor(Storage.Remote.GitHub.GitHubStorage,Interfaces.ITrigger{Issue}[])
  name: IssueTracker(GitHubStorage, ITrigger<Issue>[])
  href: api/Platform.Bot.Trackers.IssueTracker.html#Platform_Bot_Trackers_IssueTracker__ctor_Storage_Remote_GitHub_GitHubStorage_Interfaces_ITrigger_Issue____
  commentId: M:Platform.Bot.Trackers.IssueTracker.#ctor(Storage.Remote.GitHub.GitHubStorage,Interfaces.ITrigger{Issue}[])
  name.vb: IssueTracker(GitHubStorage, ITrigger(Of Issue)())
  fullName: Platform.Bot.Trackers.IssueTracker.IssueTracker(Storage.Remote.GitHub.GitHubStorage, Interfaces.ITrigger<Issue>[])
  fullName.vb: Platform.Bot.Trackers.IssueTracker.IssueTracker(Storage.Remote.GitHub.GitHubStorage, Interfaces.ITrigger(Of Issue)())
  nameWithType: IssueTracker.IssueTracker(GitHubStorage, ITrigger<Issue>[])
  nameWithType.vb: IssueTracker.IssueTracker(GitHubStorage, ITrigger(Of Issue)())
- uid: Platform.Bot.Trackers.IssueTracker.#ctor*
  name: IssueTracker
  href: api/Platform.Bot.Trackers.IssueTracker.html#Platform_Bot_Trackers_IssueTracker__ctor_
  commentId: Overload:Platform.Bot.Trackers.IssueTracker.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Trackers.IssueTracker.IssueTracker
  nameWithType: IssueTracker.IssueTracker
- uid: Platform.Bot.Trackers.IssueTracker.Start(CancellationToken)
  name: Start(CancellationToken)
  href: api/Platform.Bot.Trackers.IssueTracker.html#Platform_Bot_Trackers_IssueTracker_Start_CancellationToken_
  commentId: M:Platform.Bot.Trackers.IssueTracker.Start(CancellationToken)
  fullName: Platform.Bot.Trackers.IssueTracker.Start(CancellationToken)
  nameWithType: IssueTracker.Start(CancellationToken)
- uid: Platform.Bot.Trackers.IssueTracker.Start*
  name: Start
  href: api/Platform.Bot.Trackers.IssueTracker.html#Platform_Bot_Trackers_IssueTracker_Start_
  commentId: Overload:Platform.Bot.Trackers.IssueTracker.Start
  isSpec: "True"
  fullName: Platform.Bot.Trackers.IssueTracker.Start
  nameWithType: IssueTracker.Start
- uid: Platform.Bot.Trackers.PullRequestTracker
  name: PullRequestTracker
  href: api/Platform.Bot.Trackers.PullRequestTracker.html
  commentId: T:Platform.Bot.Trackers.PullRequestTracker
  fullName: Platform.Bot.Trackers.PullRequestTracker
  nameWithType: PullRequestTracker
- uid: Platform.Bot.Trackers.PullRequestTracker.#ctor(Storage.Remote.GitHub.GitHubStorage,Interfaces.ITrigger{PullRequest}[])
  name: PullRequestTracker(GitHubStorage, ITrigger<PullRequest>[])
  href: api/Platform.Bot.Trackers.PullRequestTracker.html#Platform_Bot_Trackers_PullRequestTracker__ctor_Storage_Remote_GitHub_GitHubStorage_Interfaces_ITrigger_PullRequest____
  commentId: M:Platform.Bot.Trackers.PullRequestTracker.#ctor(Storage.Remote.GitHub.GitHubStorage,Interfaces.ITrigger{PullRequest}[])
  name.vb: PullRequestTracker(GitHubStorage, ITrigger(Of PullRequest)())
  fullName: Platform.Bot.Trackers.PullRequestTracker.PullRequestTracker(Storage.Remote.GitHub.GitHubStorage, Interfaces.ITrigger<PullRequest>[])
  fullName.vb: Platform.Bot.Trackers.PullRequestTracker.PullRequestTracker(Storage.Remote.GitHub.GitHubStorage, Interfaces.ITrigger(Of PullRequest)())
  nameWithType: PullRequestTracker.PullRequestTracker(GitHubStorage, ITrigger<PullRequest>[])
  nameWithType.vb: PullRequestTracker.PullRequestTracker(GitHubStorage, ITrigger(Of PullRequest)())
- uid: Platform.Bot.Trackers.PullRequestTracker.#ctor*
  name: PullRequestTracker
  href: api/Platform.Bot.Trackers.PullRequestTracker.html#Platform_Bot_Trackers_PullRequestTracker__ctor_
  commentId: Overload:Platform.Bot.Trackers.PullRequestTracker.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Trackers.PullRequestTracker.PullRequestTracker
  nameWithType: PullRequestTracker.PullRequestTracker
- uid: Platform.Bot.Trackers.PullRequestTracker.Start(CancellationToken)
  name: Start(CancellationToken)
  href: api/Platform.Bot.Trackers.PullRequestTracker.html#Platform_Bot_Trackers_PullRequestTracker_Start_CancellationToken_
  commentId: M:Platform.Bot.Trackers.PullRequestTracker.Start(CancellationToken)
  fullName: Platform.Bot.Trackers.PullRequestTracker.Start(CancellationToken)
  nameWithType: PullRequestTracker.Start(CancellationToken)
- uid: Platform.Bot.Trackers.PullRequestTracker.Start*
  name: Start
  href: api/Platform.Bot.Trackers.PullRequestTracker.html#Platform_Bot_Trackers_PullRequestTracker_Start_
  commentId: Overload:Platform.Bot.Trackers.PullRequestTracker.Start
  isSpec: "True"
  fullName: Platform.Bot.Trackers.PullRequestTracker.Start
  nameWithType: PullRequestTracker.Start
- uid: Platform.Bot.Triggers
  name: Platform.Bot.Triggers
  href: api/Platform.Bot.Triggers.html
  commentId: N:Platform.Bot.Triggers
  fullName: Platform.Bot.Triggers
  nameWithType: Platform.Bot.Triggers
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger
  name: ChangeOrganizationRepositoriesDefaultBranchTrigger
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html
  commentId: T:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage,Storage.Local.FileStorage)
  name: ChangeOrganizationRepositoriesDefaultBranchTrigger(GitHubStorage, FileStorage)
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html#Platform_Bot_Triggers_ChangeOrganizationRepositoriesDefaultBranchTrigger__ctor_Storage_Remote_GitHub_GitHubStorage_Storage_Local_FileStorage_
  commentId: M:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage,Storage.Local.FileStorage)
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.ChangeOrganizationRepositoriesDefaultBranchTrigger(Storage.Remote.GitHub.GitHubStorage, Storage.Local.FileStorage)
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger.ChangeOrganizationRepositoriesDefaultBranchTrigger(GitHubStorage, FileStorage)
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.#ctor*
  name: ChangeOrganizationRepositoriesDefaultBranchTrigger
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html#Platform_Bot_Triggers_ChangeOrganizationRepositoriesDefaultBranchTrigger__ctor_
  commentId: Overload:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.ChangeOrganizationRepositoriesDefaultBranchTrigger
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger.ChangeOrganizationRepositoriesDefaultBranchTrigger
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Action(Issue)
  name: Action(Issue)
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html#Platform_Bot_Triggers_ChangeOrganizationRepositoriesDefaultBranchTrigger_Action_Issue_
  commentId: M:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Action(Issue)
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Action(Issue)
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger.Action(Issue)
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Action*
  name: Action
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html#Platform_Bot_Triggers_ChangeOrganizationRepositoriesDefaultBranchTrigger_Action_
  commentId: Overload:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Action
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Action
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger.Action
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition(Issue)
  name: Condition(Issue)
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html#Platform_Bot_Triggers_ChangeOrganizationRepositoriesDefaultBranchTrigger_Condition_Issue_
  commentId: M:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition(Issue)
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition(Issue)
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition(Issue)
- uid: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition*
  name: Condition
  href: api/Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.html#Platform_Bot_Triggers_ChangeOrganizationRepositoriesDefaultBranchTrigger_Condition_
  commentId: Overload:Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition
  nameWithType: ChangeOrganizationRepositoriesDefaultBranchTrigger.Condition
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger
  name: CreateAndSaveOrganizationRepositoriesMigrationTrigger
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html
  commentId: T:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage,Storage.Local.FileStorage,System.String)
  name: CreateAndSaveOrganizationRepositoriesMigrationTrigger(GitHubStorage, FileStorage, String)
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html#Platform_Bot_Triggers_CreateAndSaveOrganizationRepositoriesMigrationTrigger__ctor_Storage_Remote_GitHub_GitHubStorage_Storage_Local_FileStorage_System_String_
  commentId: M:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage,Storage.Local.FileStorage,System.String)
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.CreateAndSaveOrganizationRepositoriesMigrationTrigger(Storage.Remote.GitHub.GitHubStorage, Storage.Local.FileStorage, System.String)
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger.CreateAndSaveOrganizationRepositoriesMigrationTrigger(GitHubStorage, FileStorage, String)
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.#ctor*
  name: CreateAndSaveOrganizationRepositoriesMigrationTrigger
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html#Platform_Bot_Triggers_CreateAndSaveOrganizationRepositoriesMigrationTrigger__ctor_
  commentId: Overload:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.CreateAndSaveOrganizationRepositoriesMigrationTrigger
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger.CreateAndSaveOrganizationRepositoriesMigrationTrigger
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action(System.Nullable{DateTime})
  name: Action(Nullable<DateTime>)
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html#Platform_Bot_Triggers_CreateAndSaveOrganizationRepositoriesMigrationTrigger_Action_System_Nullable_DateTime__
  commentId: M:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action(System.Nullable{DateTime})
  name.vb: Action(Nullable(Of DateTime))
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action(System.Nullable<DateTime>)
  fullName.vb: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action(System.Nullable(Of DateTime))
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action(Nullable<DateTime>)
  nameWithType.vb: CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action(Nullable(Of DateTime))
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action*
  name: Action
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html#Platform_Bot_Triggers_CreateAndSaveOrganizationRepositoriesMigrationTrigger_Action_
  commentId: Overload:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action
  isSpec: "True"
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger.Action
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition(System.Nullable{DateTime})
  name: Condition(Nullable<DateTime>)
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html#Platform_Bot_Triggers_CreateAndSaveOrganizationRepositoriesMigrationTrigger_Condition_System_Nullable_DateTime__
  commentId: M:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition(System.Nullable{DateTime})
  name.vb: Condition(Nullable(Of DateTime))
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition(System.Nullable<DateTime>)
  fullName.vb: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition(System.Nullable(Of DateTime))
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition(Nullable<DateTime>)
  nameWithType.vb: CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition(Nullable(Of DateTime))
- uid: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition*
  name: Condition
  href: api/Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.html#Platform_Bot_Triggers_CreateAndSaveOrganizationRepositoriesMigrationTrigger_Condition_
  commentId: Overload:Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition
  isSpec: "True"
  fullName: Platform.Bot.Triggers.CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition
  nameWithType: CreateAndSaveOrganizationRepositoriesMigrationTrigger.Condition
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger
  name: MergeDependabotBumpsTrigger
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html
  commentId: T:Platform.Bot.Triggers.MergeDependabotBumpsTrigger
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger
  nameWithType: MergeDependabotBumpsTrigger
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage)
  name: MergeDependabotBumpsTrigger(GitHubStorage)
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html#Platform_Bot_Triggers_MergeDependabotBumpsTrigger__ctor_Storage_Remote_GitHub_GitHubStorage_
  commentId: M:Platform.Bot.Triggers.MergeDependabotBumpsTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage)
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.MergeDependabotBumpsTrigger(Storage.Remote.GitHub.GitHubStorage)
  nameWithType: MergeDependabotBumpsTrigger.MergeDependabotBumpsTrigger(GitHubStorage)
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.#ctor*
  name: MergeDependabotBumpsTrigger
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html#Platform_Bot_Triggers_MergeDependabotBumpsTrigger__ctor_
  commentId: Overload:Platform.Bot.Triggers.MergeDependabotBumpsTrigger.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.MergeDependabotBumpsTrigger
  nameWithType: MergeDependabotBumpsTrigger.MergeDependabotBumpsTrigger
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Action(PullRequest)
  name: Action(PullRequest)
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html#Platform_Bot_Triggers_MergeDependabotBumpsTrigger_Action_PullRequest_
  commentId: M:Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Action(PullRequest)
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Action(PullRequest)
  nameWithType: MergeDependabotBumpsTrigger.Action(PullRequest)
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Action*
  name: Action
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html#Platform_Bot_Triggers_MergeDependabotBumpsTrigger_Action_
  commentId: Overload:Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Action
  isSpec: "True"
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Action
  nameWithType: MergeDependabotBumpsTrigger.Action
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Condition(PullRequest)
  name: Condition(PullRequest)
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html#Platform_Bot_Triggers_MergeDependabotBumpsTrigger_Condition_PullRequest_
  commentId: M:Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Condition(PullRequest)
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Condition(PullRequest)
  nameWithType: MergeDependabotBumpsTrigger.Condition(PullRequest)
- uid: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Condition*
  name: Condition
  href: api/Platform.Bot.Triggers.MergeDependabotBumpsTrigger.html#Platform_Bot_Triggers_MergeDependabotBumpsTrigger_Condition_
  commentId: Overload:Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Condition
  isSpec: "True"
  fullName: Platform.Bot.Triggers.MergeDependabotBumpsTrigger.Condition
  nameWithType: MergeDependabotBumpsTrigger.Condition
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger
  name: ProtectMainBranchTrigger
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html
  commentId: T:Platform.Bot.Triggers.ProtectMainBranchTrigger
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger
  nameWithType: ProtectMainBranchTrigger
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage)
  name: ProtectMainBranchTrigger(GitHubStorage)
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger__ctor_Storage_Remote_GitHub_GitHubStorage_
  commentId: M:Platform.Bot.Triggers.ProtectMainBranchTrigger.#ctor(Storage.Remote.GitHub.GitHubStorage)
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.ProtectMainBranchTrigger(Storage.Remote.GitHub.GitHubStorage)
  nameWithType: ProtectMainBranchTrigger.ProtectMainBranchTrigger(GitHubStorage)
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.#ctor*
  name: ProtectMainBranchTrigger
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger__ctor_
  commentId: Overload:Platform.Bot.Triggers.ProtectMainBranchTrigger.#ctor
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.ProtectMainBranchTrigger
  nameWithType: ProtectMainBranchTrigger.ProtectMainBranchTrigger
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.Action(Issue)
  name: Action(Issue)
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger_Action_Issue_
  commentId: M:Platform.Bot.Triggers.ProtectMainBranchTrigger.Action(Issue)
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.Action(Issue)
  nameWithType: ProtectMainBranchTrigger.Action(Issue)
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.Action*
  name: Action
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger_Action_
  commentId: Overload:Platform.Bot.Triggers.ProtectMainBranchTrigger.Action
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.Action
  nameWithType: ProtectMainBranchTrigger.Action
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.Condition(Issue)
  name: Condition(Issue)
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger_Condition_Issue_
  commentId: M:Platform.Bot.Triggers.ProtectMainBranchTrigger.Condition(Issue)
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.Condition(Issue)
  nameWithType: ProtectMainBranchTrigger.Condition(Issue)
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.Condition*
  name: Condition
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger_Condition_
  commentId: Overload:Platform.Bot.Triggers.ProtectMainBranchTrigger.Condition
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.Condition
  nameWithType: ProtectMainBranchTrigger.Condition
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection(IReadOnlyList{Repository})
  name: UpdateRepositoriesDefaultBranchProtection(IReadOnlyList<Repository>)
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger_UpdateRepositoriesDefaultBranchProtection_IReadOnlyList_Repository__
  commentId: M:Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection(IReadOnlyList{Repository})
  name.vb: UpdateRepositoriesDefaultBranchProtection(IReadOnlyList(Of Repository))
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection(IReadOnlyList<Repository>)
  fullName.vb: Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection(IReadOnlyList(Of Repository))
  nameWithType: ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection(IReadOnlyList<Repository>)
  nameWithType.vb: ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection(IReadOnlyList(Of Repository))
- uid: Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection*
  name: UpdateRepositoriesDefaultBranchProtection
  href: api/Platform.Bot.Triggers.ProtectMainBranchTrigger.html#Platform_Bot_Triggers_ProtectMainBranchTrigger_UpdateRepositoriesDefaultBranchProtection_
  commentId: Overload:Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection
  isSpec: "True"
  fullName: Platform.Bot.Triggers.ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection
  nameWithType: ProtectMainBranchTrigger.UpdateRepositoriesDefaultBranchProtection
- uid: Storage.Local
  name: Storage.Local
  href: api/Storage.Local.html
  commentId: N:Storage.Local
  fullName: Storage.Local
  nameWithType: Storage.Local
- uid: Storage.Local.File
  name: File
  href: api/Storage.Local.File.html
  commentId: T:Storage.Local.File
  fullName: Storage.Local.File
  nameWithType: File
- uid: Storage.Local.File.Content
  name: Content
  href: api/Storage.Local.File.html#Storage_Local_File_Content
  commentId: P:Storage.Local.File.Content
  fullName: Storage.Local.File.Content
  nameWithType: File.Content
- uid: Storage.Local.File.Content*
  name: Content
  href: api/Storage.Local.File.html#Storage_Local_File_Content_
  commentId: Overload:Storage.Local.File.Content
  isSpec: "True"
  fullName: Storage.Local.File.Content
  nameWithType: File.Content
- uid: Storage.Local.File.Path
  name: Path
  href: api/Storage.Local.File.html#Storage_Local_File_Path
  commentId: P:Storage.Local.File.Path
  fullName: Storage.Local.File.Path
  nameWithType: File.Path
- uid: Storage.Local.File.Path*
  name: Path
  href: api/Storage.Local.File.html#Storage_Local_File_Path_
  commentId: Overload:Storage.Local.File.Path
  isSpec: "True"
  fullName: Storage.Local.File.Path
  nameWithType: File.Path
- uid: Storage.Local.FileStorage
  name: FileStorage
  href: api/Storage.Local.FileStorage.html
  commentId: T:Storage.Local.FileStorage
  fullName: Storage.Local.FileStorage
  nameWithType: FileStorage
- uid: Storage.Local.FileStorage.#ctor(System.String)
  name: FileStorage(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage__ctor_System_String_
  commentId: M:Storage.Local.FileStorage.#ctor(System.String)
  fullName: Storage.Local.FileStorage.FileStorage(System.String)
  nameWithType: FileStorage.FileStorage(String)
- uid: Storage.Local.FileStorage.#ctor*
  name: FileStorage
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage__ctor_
  commentId: Overload:Storage.Local.FileStorage.#ctor
  isSpec: "True"
  fullName: Storage.Local.FileStorage.FileStorage
  nameWithType: FileStorage.FileStorage
- uid: Storage.Local.FileStorage.AddFile(System.String)
  name: AddFile(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFile_System_String_
  commentId: M:Storage.Local.FileStorage.AddFile(System.String)
  fullName: Storage.Local.FileStorage.AddFile(System.String)
  nameWithType: FileStorage.AddFile(String)
- uid: Storage.Local.FileStorage.AddFile*
  name: AddFile
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFile_
  commentId: Overload:Storage.Local.FileStorage.AddFile
  isSpec: "True"
  fullName: Storage.Local.FileStorage.AddFile
  nameWithType: FileStorage.AddFile
- uid: Storage.Local.FileStorage.AddFileToSet(System.UInt64,System.UInt64,System.String)
  name: AddFileToSet(System.UInt64, System.UInt64, String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFileToSet_System_UInt64_System_UInt64_System_String_
  commentId: M:Storage.Local.FileStorage.AddFileToSet(System.UInt64,System.UInt64,System.String)
  fullName: Storage.Local.FileStorage.AddFileToSet(System.UInt64, System.UInt64, System.String)
  nameWithType: FileStorage.AddFileToSet(System.UInt64, System.UInt64, String)
- uid: Storage.Local.FileStorage.AddFileToSet*
  name: AddFileToSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AddFileToSet_
  commentId: Overload:Storage.Local.FileStorage.AddFileToSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.AddFileToSet
  nameWithType: FileStorage.AddFileToSet
- uid: Storage.Local.FileStorage.AllLinksToString
  name: AllLinksToString()
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AllLinksToString
  commentId: M:Storage.Local.FileStorage.AllLinksToString
  fullName: Storage.Local.FileStorage.AllLinksToString()
  nameWithType: FileStorage.AllLinksToString()
- uid: Storage.Local.FileStorage.AllLinksToString*
  name: AllLinksToString
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_AllLinksToString_
  commentId: Overload:Storage.Local.FileStorage.AllLinksToString
  isSpec: "True"
  fullName: Storage.Local.FileStorage.AllLinksToString
  nameWithType: FileStorage.AllLinksToString
- uid: Storage.Local.FileStorage.CreateBigInteger(BigInteger)
  name: CreateBigInteger(BigInteger)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateBigInteger_BigInteger_
  commentId: M:Storage.Local.FileStorage.CreateBigInteger(BigInteger)
  fullName: Storage.Local.FileStorage.CreateBigInteger(BigInteger)
  nameWithType: FileStorage.CreateBigInteger(BigInteger)
- uid: Storage.Local.FileStorage.CreateBigInteger*
  name: CreateBigInteger
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateBigInteger_
  commentId: Overload:Storage.Local.FileStorage.CreateBigInteger
  isSpec: "True"
  fullName: Storage.Local.FileStorage.CreateBigInteger
  nameWithType: FileStorage.CreateBigInteger
- uid: Storage.Local.FileStorage.CreateFileSet(System.String)
  name: CreateFileSet(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateFileSet_System_String_
  commentId: M:Storage.Local.FileStorage.CreateFileSet(System.String)
  fullName: Storage.Local.FileStorage.CreateFileSet(System.String)
  nameWithType: FileStorage.CreateFileSet(String)
- uid: Storage.Local.FileStorage.CreateFileSet*
  name: CreateFileSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateFileSet_
  commentId: Overload:Storage.Local.FileStorage.CreateFileSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.CreateFileSet
  nameWithType: FileStorage.CreateFileSet
- uid: Storage.Local.FileStorage.CreateString(System.String)
  name: CreateString(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateString_System_String_
  commentId: M:Storage.Local.FileStorage.CreateString(System.String)
  fullName: Storage.Local.FileStorage.CreateString(System.String)
  nameWithType: FileStorage.CreateString(String)
- uid: Storage.Local.FileStorage.CreateString*
  name: CreateString
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_CreateString_
  commentId: Overload:Storage.Local.FileStorage.CreateString
  isSpec: "True"
  fullName: Storage.Local.FileStorage.CreateString
  nameWithType: FileStorage.CreateString
- uid: Storage.Local.FileStorage.Delete(System.UInt64)
  name: Delete(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Delete_System_UInt64_
  commentId: M:Storage.Local.FileStorage.Delete(System.UInt64)
  fullName: Storage.Local.FileStorage.Delete(System.UInt64)
  nameWithType: FileStorage.Delete(System.UInt64)
- uid: Storage.Local.FileStorage.Delete*
  name: Delete
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Delete_
  commentId: Overload:Storage.Local.FileStorage.Delete
  isSpec: "True"
  fullName: Storage.Local.FileStorage.Delete
  nameWithType: FileStorage.Delete
- uid: Storage.Local.FileStorage.Dispose(System.Boolean,System.Boolean)
  name: Dispose(Boolean, Boolean)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Dispose_System_Boolean_System_Boolean_
  commentId: M:Storage.Local.FileStorage.Dispose(System.Boolean,System.Boolean)
  fullName: Storage.Local.FileStorage.Dispose(System.Boolean, System.Boolean)
  nameWithType: FileStorage.Dispose(Boolean, Boolean)
- uid: Storage.Local.FileStorage.Dispose*
  name: Dispose
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_Dispose_
  commentId: Overload:Storage.Local.FileStorage.Dispose
  isSpec: "True"
  fullName: Storage.Local.FileStorage.Dispose
  nameWithType: FileStorage.Dispose
- uid: Storage.Local.FileStorage.GetAllFiles
  name: GetAllFiles()
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetAllFiles
  commentId: M:Storage.Local.FileStorage.GetAllFiles
  fullName: Storage.Local.FileStorage.GetAllFiles()
  nameWithType: FileStorage.GetAllFiles()
- uid: Storage.Local.FileStorage.GetAllFiles*
  name: GetAllFiles
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetAllFiles_
  commentId: Overload:Storage.Local.FileStorage.GetAllFiles
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetAllFiles
  nameWithType: FileStorage.GetAllFiles
- uid: Storage.Local.FileStorage.GetBigInteger(System.UInt64)
  name: GetBigInteger(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetBigInteger_System_UInt64_
  commentId: M:Storage.Local.FileStorage.GetBigInteger(System.UInt64)
  fullName: Storage.Local.FileStorage.GetBigInteger(System.UInt64)
  nameWithType: FileStorage.GetBigInteger(System.UInt64)
- uid: Storage.Local.FileStorage.GetBigInteger*
  name: GetBigInteger
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetBigInteger_
  commentId: Overload:Storage.Local.FileStorage.GetBigInteger
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetBigInteger
  nameWithType: FileStorage.GetBigInteger
- uid: Storage.Local.FileStorage.GetFileContent(System.UInt64)
  name: GetFileContent(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileContent_System_UInt64_
  commentId: M:Storage.Local.FileStorage.GetFileContent(System.UInt64)
  fullName: Storage.Local.FileStorage.GetFileContent(System.UInt64)
  nameWithType: FileStorage.GetFileContent(System.UInt64)
- uid: Storage.Local.FileStorage.GetFileContent*
  name: GetFileContent
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileContent_
  commentId: Overload:Storage.Local.FileStorage.GetFileContent
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetFileContent
  nameWithType: FileStorage.GetFileContent
- uid: Storage.Local.FileStorage.GetFileSet(System.String)
  name: GetFileSet(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileSet_System_String_
  commentId: M:Storage.Local.FileStorage.GetFileSet(System.String)
  fullName: Storage.Local.FileStorage.GetFileSet(System.String)
  nameWithType: FileStorage.GetFileSet(String)
- uid: Storage.Local.FileStorage.GetFileSet*
  name: GetFileSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFileSet_
  commentId: Overload:Storage.Local.FileStorage.GetFileSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetFileSet
  nameWithType: FileStorage.GetFileSet
- uid: Storage.Local.FileStorage.GetFilesFromSet(System.String)
  name: GetFilesFromSet(String)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFilesFromSet_System_String_
  commentId: M:Storage.Local.FileStorage.GetFilesFromSet(System.String)
  fullName: Storage.Local.FileStorage.GetFilesFromSet(System.String)
  nameWithType: FileStorage.GetFilesFromSet(String)
- uid: Storage.Local.FileStorage.GetFilesFromSet*
  name: GetFilesFromSet
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetFilesFromSet_
  commentId: Overload:Storage.Local.FileStorage.GetFilesFromSet
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetFilesFromSet
  nameWithType: FileStorage.GetFilesFromSet
- uid: Storage.Local.FileStorage.GetString(System.UInt64)
  name: GetString(System.UInt64)
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetString_System_UInt64_
  commentId: M:Storage.Local.FileStorage.GetString(System.UInt64)
  fullName: Storage.Local.FileStorage.GetString(System.UInt64)
  nameWithType: FileStorage.GetString(System.UInt64)
- uid: Storage.Local.FileStorage.GetString*
  name: GetString
  href: api/Storage.Local.FileStorage.html#Storage_Local_FileStorage_GetString_
  commentId: Overload:Storage.Local.FileStorage.GetString
  isSpec: "True"
  fullName: Storage.Local.FileStorage.GetString
  nameWithType: FileStorage.GetString
- uid: Storage.Remote.GitHub
  name: Storage.Remote.GitHub
  href: api/Storage.Remote.GitHub.html
  commentId: N:Storage.Remote.GitHub
  fullName: Storage.Remote.GitHub
  nameWithType: Storage.Remote.GitHub
- uid: Storage.Remote.GitHub.GitHubStorage
  name: GitHubStorage
  href: api/Storage.Remote.GitHub.GitHubStorage.html
  commentId: T:Storage.Remote.GitHub.GitHubStorage
  fullName: Storage.Remote.GitHub.GitHubStorage
  nameWithType: GitHubStorage
- uid: Storage.Remote.GitHub.GitHubStorage.#ctor(System.String,System.String,System.String)
  name: GitHubStorage(String, String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage__ctor_System_String_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.#ctor(System.String,System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GitHubStorage(System.String, System.String, System.String)
  nameWithType: GitHubStorage.GitHubStorage(String, String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.#ctor*
  name: GitHubStorage
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage__ctor_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.#ctor
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GitHubStorage
  nameWithType: GitHubStorage.GitHubStorage
- uid: Storage.Remote.GitHub.GitHubStorage.Client
  name: Client
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_Client
  commentId: F:Storage.Remote.GitHub.GitHubStorage.Client
  fullName: Storage.Remote.GitHub.GitHubStorage.Client
  nameWithType: GitHubStorage.Client
- uid: Storage.Remote.GitHub.GitHubStorage.CloseIssue(Issue)
  name: CloseIssue(Issue)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CloseIssue_Issue_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CloseIssue(Issue)
  fullName: Storage.Remote.GitHub.GitHubStorage.CloseIssue(Issue)
  nameWithType: GitHubStorage.CloseIssue(Issue)
- uid: Storage.Remote.GitHub.GitHubStorage.CloseIssue*
  name: CloseIssue
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CloseIssue_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CloseIssue
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CloseIssue
  nameWithType: GitHubStorage.CloseIssue
- uid: Storage.Remote.GitHub.GitHubStorage.CreateIssueComment(System.Int64,System.Int32,System.String)
  name: CreateIssueComment(Int64, Int32, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateIssueComment_System_Int64_System_Int32_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CreateIssueComment(System.Int64,System.Int32,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateIssueComment(System.Int64, System.Int32, System.String)
  nameWithType: GitHubStorage.CreateIssueComment(Int64, Int32, String)
- uid: Storage.Remote.GitHub.GitHubStorage.CreateIssueComment*
  name: CreateIssueComment
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateIssueComment_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CreateIssueComment
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateIssueComment
  nameWithType: GitHubStorage.CreateIssueComment
- uid: Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String,IReadOnlyList{System.String})
  name: CreateMigration(String, IReadOnlyList<String>)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateMigration_System_String_IReadOnlyList_System_String__
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String,IReadOnlyList{System.String})
  name.vb: CreateMigration(String, IReadOnlyList(Of String))
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String, IReadOnlyList<System.String>)
  fullName.vb: Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String, IReadOnlyList(Of System.String))
  nameWithType: GitHubStorage.CreateMigration(String, IReadOnlyList<String>)
  nameWithType.vb: GitHubStorage.CreateMigration(String, IReadOnlyList(Of String))
- uid: Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String,System.String[])
  name: CreateMigration(String, String[])
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateMigration_System_String_System_String___
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String,System.String[])
  name.vb: CreateMigration(String, String())
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String, System.String[])
  fullName.vb: Storage.Remote.GitHub.GitHubStorage.CreateMigration(System.String, System.String())
  nameWithType: GitHubStorage.CreateMigration(String, String[])
  nameWithType.vb: GitHubStorage.CreateMigration(String, String())
- uid: Storage.Remote.GitHub.GitHubStorage.CreateMigration*
  name: CreateMigration
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateMigration_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CreateMigration
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateMigration
  nameWithType: GitHubStorage.CreateMigration
- uid: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile(System.String,System.String,Storage.Local.File)
  name: CreateOrUpdateFile(String, String, File)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateOrUpdateFile_System_String_System_String_Storage_Local_File_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile(System.String,System.String,Storage.Local.File)
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile(System.String, System.String, Storage.Local.File)
  nameWithType: GitHubStorage.CreateOrUpdateFile(String, String, File)
- uid: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile*
  name: CreateOrUpdateFile
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateOrUpdateFile_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateOrUpdateFile
  nameWithType: GitHubStorage.CreateOrUpdateFile
- uid: Storage.Remote.GitHub.GitHubStorage.CreateReference(System.Int64,NewReference)
  name: CreateReference(Int64, NewReference)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateReference_System_Int64_NewReference_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.CreateReference(System.Int64,NewReference)
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateReference(System.Int64, NewReference)
  nameWithType: GitHubStorage.CreateReference(Int64, NewReference)
- uid: Storage.Remote.GitHub.GitHubStorage.CreateReference*
  name: CreateReference
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_CreateReference_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.CreateReference
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.CreateReference
  nameWithType: GitHubStorage.CreateReference
- uid: Storage.Remote.GitHub.GitHubStorage.DependabotId
  name: DependabotId
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_DependabotId
  commentId: F:Storage.Remote.GitHub.GitHubStorage.DependabotId
  fullName: Storage.Remote.GitHub.GitHubStorage.DependabotId
  nameWithType: GitHubStorage.DependabotId
- uid: Storage.Remote.GitHub.GitHubStorage.GetAllMigrations(System.String)
  name: GetAllMigrations(String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetAllMigrations_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetAllMigrations(System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetAllMigrations(System.String)
  nameWithType: GitHubStorage.GetAllMigrations(String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetAllMigrations*
  name: GetAllMigrations
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetAllMigrations_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetAllMigrations
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetAllMigrations
  nameWithType: GitHubStorage.GetAllMigrations
- uid: Storage.Remote.GitHub.GitHubStorage.GetAllRepositories(System.String)
  name: GetAllRepositories(String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetAllRepositories_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetAllRepositories(System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetAllRepositories(System.String)
  nameWithType: GitHubStorage.GetAllRepositories(String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetAllRepositories*
  name: GetAllRepositories
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetAllRepositories_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetAllRepositories
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetAllRepositories
  nameWithType: GitHubStorage.GetAllRepositories
- uid: Storage.Remote.GitHub.GitHubStorage.GetBranch(System.Int64,System.String)
  name: GetBranch(Int64, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetBranch_System_Int64_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetBranch(System.Int64,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetBranch(System.Int64, System.String)
  nameWithType: GitHubStorage.GetBranch(Int64, String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetBranch*
  name: GetBranch
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetBranch_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetBranch
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetBranch
  nameWithType: GitHubStorage.GetBranch
- uid: Storage.Remote.GitHub.GitHubStorage.GetCommits(System.Int64,CommitRequest)
  name: GetCommits(Int64, CommitRequest)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetCommits_System_Int64_CommitRequest_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetCommits(System.Int64,CommitRequest)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetCommits(System.Int64, CommitRequest)
  nameWithType: GitHubStorage.GetCommits(Int64, CommitRequest)
- uid: Storage.Remote.GitHub.GitHubStorage.GetCommits*
  name: GetCommits
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetCommits_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetCommits
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetCommits
  nameWithType: GitHubStorage.GetCommits
- uid: Storage.Remote.GitHub.GitHubStorage.GetIssues
  name: GetIssues()
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetIssues
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetIssues
  fullName: Storage.Remote.GitHub.GitHubStorage.GetIssues()
  nameWithType: GitHubStorage.GetIssues()
- uid: Storage.Remote.GitHub.GitHubStorage.GetIssues(System.String,System.String)
  name: GetIssues(String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetIssues_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetIssues(System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetIssues(System.String, System.String)
  nameWithType: GitHubStorage.GetIssues(String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetIssues*
  name: GetIssues
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetIssues_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetIssues
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetIssues
  nameWithType: GitHubStorage.GetIssues
- uid: Storage.Remote.GitHub.GitHubStorage.GetOrganizationMembers(System.String)
  name: GetOrganizationMembers(String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetOrganizationMembers_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetOrganizationMembers(System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetOrganizationMembers(System.String)
  nameWithType: GitHubStorage.GetOrganizationMembers(String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetOrganizationMembers*
  name: GetOrganizationMembers
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetOrganizationMembers_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetOrganizationMembers
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetOrganizationMembers
  nameWithType: GitHubStorage.GetOrganizationMembers
- uid: Storage.Remote.GitHub.GitHubStorage.GetPullRequest(System.Int32,System.Int32)
  name: GetPullRequest(Int32, Int32)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetPullRequest_System_Int32_System_Int32_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetPullRequest(System.Int32,System.Int32)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetPullRequest(System.Int32, System.Int32)
  nameWithType: GitHubStorage.GetPullRequest(Int32, Int32)
- uid: Storage.Remote.GitHub.GitHubStorage.GetPullRequest*
  name: GetPullRequest
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetPullRequest_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetPullRequest
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetPullRequest
  nameWithType: GitHubStorage.GetPullRequest
- uid: Storage.Remote.GitHub.GitHubStorage.GetPullRequests(System.String,System.String)
  name: GetPullRequests(String, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetPullRequests_System_String_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.GetPullRequests(System.String,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.GetPullRequests(System.String, System.String)
  nameWithType: GitHubStorage.GetPullRequests(String, String)
- uid: Storage.Remote.GitHub.GitHubStorage.GetPullRequests*
  name: GetPullRequests
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_GetPullRequests_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.GetPullRequests
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.GetPullRequests
  nameWithType: GitHubStorage.GetPullRequests
- uid: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  name: MinimumInteractionInterval
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_MinimumInteractionInterval
  commentId: P:Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  fullName: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  nameWithType: GitHubStorage.MinimumInteractionInterval
- uid: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval*
  name: MinimumInteractionInterval
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_MinimumInteractionInterval_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.MinimumInteractionInterval
  nameWithType: GitHubStorage.MinimumInteractionInterval
- uid: Storage.Remote.GitHub.GitHubStorage.Owner
  name: Owner
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_Owner
  commentId: F:Storage.Remote.GitHub.GitHubStorage.Owner
  fullName: Storage.Remote.GitHub.GitHubStorage.Owner
  nameWithType: GitHubStorage.Owner
- uid: Storage.Remote.GitHub.GitHubStorage.SaveMigrationArchive(System.String,System.Int32,System.String)
  name: SaveMigrationArchive(String, Int32, String)
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_SaveMigrationArchive_System_String_System_Int32_System_String_
  commentId: M:Storage.Remote.GitHub.GitHubStorage.SaveMigrationArchive(System.String,System.Int32,System.String)
  fullName: Storage.Remote.GitHub.GitHubStorage.SaveMigrationArchive(System.String, System.Int32, System.String)
  nameWithType: GitHubStorage.SaveMigrationArchive(String, Int32, String)
- uid: Storage.Remote.GitHub.GitHubStorage.SaveMigrationArchive*
  name: SaveMigrationArchive
  href: api/Storage.Remote.GitHub.GitHubStorage.html#Storage_Remote_GitHub_GitHubStorage_SaveMigrationArchive_
  commentId: Overload:Storage.Remote.GitHub.GitHubStorage.SaveMigrationArchive
  isSpec: "True"
  fullName: Storage.Remote.GitHub.GitHubStorage.SaveMigrationArchive
  nameWithType: GitHubStorage.SaveMigrationArchive
